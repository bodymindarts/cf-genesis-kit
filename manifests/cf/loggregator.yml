---
meta:
  loggregator:
    endpoint_secret: (( vault meta.vault "/loggregator/endpoint:secret" ))

instance_groups:
  - name: doppler
    jobs:
      - name: doppler
        release: loggregator
        provides:
          doppler: {as: doppler, shared: true}
        properties:
          doppler_endpoint:
            shared_secret: (( grab meta.loggregator.endpoint_secret ))
          doppler:
            disable_announce: true
          loggregator:
            disable_syslog_drains: true
            tls:
              ca_cert: (( grab meta.certs.loggregator.ca ))
              doppler: (( grab meta.certs.loggregator.doppler.server ))

  - name: loggregator_trafficcontroller
    jobs:
    - name: loggregator_trafficcontroller
      release: loggregator
      consumes:
        doppler: {from: doppler}
      properties:
        system_domain: (( grab params.system_domain ))
        cc:
          tls_port: (( grab meta.cc.tls_port ))
          internal_service_hostname: cloud-controller-ng.service.cf.internal
          mutual_tls:
            ca_cert: (( grab meta.cc.mutual_tls.ca_cert ))
        ssl:
          skip_cert_verify: (( grab params.skip_ssl_validation ))
        loggregator:
          outgoing_cert: (( grab meta.certs.loggregator.trafficcontroller.server.cert ))
          outgoing_key: (( grab meta.certs.loggregator.trafficcontroller.server.key ))
          tls:
            ca_cert: (( grab meta.certs.loggregator.ca ))
            trafficcontroller: (( grab meta.certs.loggregator.trafficcontroller.server ))
            cc_trafficcontroller: (( grab meta.certs.diego.capi.client ))
          uaa:
            client_secret: (( grab meta.uaa.doppler_secret ))
        uaa:
          internal_url: (( grab meta.uaa.internal_url ))
          ca_cert: (( grab meta.certs.uaa.ca ))

    - name: reverse_log_proxy
      release: loggregator
      provides:
        reverse_log_proxy: {as: reverse_log_proxy, shared: true}
      properties:
        loggregator:
          tls:
            ca_cert: (( grab meta.certs.loggregator.ca ))
            reverse_log_proxy: (( grab meta.certs.loggregator.syslogger.rlp ))

    - name: reverse_log_proxy_gateway
      release: loggregator
      properties:
        http:
          address: "0.0.0.0:8088"
          cert: (( vault meta.vault "/loggregator/certs/rlp_gateway:certificate" ))
          key:  (( vault meta.vault "/loggregator/certs/rlp_gateway:key" ))
        logs_provider:
          ca_cert:     (( grab meta.certs.loggregator.ca ))
          client_cert: (( grab meta.certs.loggregator.syslogger.rlp.cert ))
          client_key:  (( grab meta.certs.loggregator.syslogger.rlp.key ))
        cc:
          capi_internal_addr: https://cloud-controller-ng.service.cf.internal:9023
          common_name: cloud-controller-ng.service.cf.internal
          ca_cert: (( grab meta.certs.diego.ca ))
          cert:    (( grab meta.certs.diego.rlp_gateway.cert ))
          key:     (( grab meta.certs.diego.rlp_gateway.key ))
        uaa:
          ca_cert: (( grab meta.certs.uaa.ca ))
          client_id: doppler
          client_secret: (( grab meta.uaa.doppler_secret ))
          internal_addr: https://uaa.service.cf.internal:8443

    - name: log-cache
      release: log-cache
      provides:
        log-cache: {shared: true}
      properties:
        health_addr: localhost:6060
        tls:
          ca_cert: (( grab meta.certs.loggregator.ca ))
          cert:    (( grab meta.certs.loggregator.logcache.cert ))
          key:     (( grab meta.certs.loggregator.logcache.key ))

    - name: log-cache-gateway
      release: log-cache
      properties:
        gateway_addr: localhost:8084

    - name: log-cache-nozzle
      release: log-cache
      consumes:
        reverse_log_proxy: {from: reverse_log_proxy}
      properties:
        logs_provider:
          tls:
            ca_cert: (( grab meta.certs.loggregator.ca ))
            cert:    (( grab meta.certs.loggregator.rlp_gateway.cert ))
            key:     (( grab meta.certs.loggregator.rlp_gateway.key ))

    - name: log-cache-cf-auth-proxy
      release: log-cache
      properties:
        cc:
          common_name: cloud-controller-ng.service.cf.internal
          ca_cert: (( grab meta.certs.diego.ca ))
        proxy_port: 8083
        external_cert: (( vault meta.vault "/loggregator/certs/log_cache:certificate" ))
        external_key:  (( vault meta.vault "/loggregator/certs/log_cache:key" ))
        uaa:
          ca_cert: (( grab meta.certs.uaa.ca ))
          client_id: doppler
          client_secret: (( grab meta.uaa.doppler_secret ))
          internal_addr: https://uaa.service.cf.internal:8443

    - name: route_registrar
      release: routing
      properties:
        route_registrar:
          routes:
            - name: doppler
              tls_port: 8081
              server_cert_domain_san: (( concat "doppler." params.system_domain ))
              registration_interval: 20s
              uris:
                - (( concat "doppler."   params.system_domain ))
                - (( concat "*.doppler." params.system_domain ))
            - name: log-cache-reverse-proxy
              port: 8083
              tls_port: 8083
              registration_interval: 20s
              server_cert_domain_san: (( concat "log-cache." params.system_domain ))
              uris:
                - (( concat "log-cache."   params.system_domain ))
                - (( concat "*.log-cache." params.system_domain ))
