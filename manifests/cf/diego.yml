---
meta:
  cc:
    diego:
      # These are here to ensure that we can augment them if cflinuxfs2
      # (for backwards-compatibility) is enabled.  These are the defaults
      # from the upstream BOSH release, made explicit here.
      #
      lifecycle_bundles:
        buildpack/cflinuxfs3: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
        docker:               docker_app_lifecycle/docker_app_lifecycle.tgz
      droplet_destinations:
        cflinuxfs3: /home/vcap

instance_groups:
  - name: diego
    jobs:
      - name: cfdot
        release: diego
        properties:
          tls:
            ca_certificate: (( grab meta.certs.diego.ca ))
            certificate: (( grab meta.certs.diego.rep.server.server_cert ))
            private_key: (( grab meta.certs.diego.rep.server.server_key ))

      - name: auctioneer
        release: diego
        properties:
          enable_consul_service_registration: false
          diego:
            loggregator:
              use_v2_api: true
              ca_cert: (( grab meta.certs.loggregator.ca ))
              cert: (( grab meta.certs.loggregator.metron.server.cert ))
              key: (( grab meta.certs.loggregator.metron.server.key ))
            auctioneer:
              .: (( inject meta.certs.diego.auctioneer.server ))
              skip_consul_lock: true
              ca_cert: (( grab meta.certs.diego.ca ))

              bbs:
                .: (( inject meta.certs.diego.bbs.client ))
                ca_cert: (( grab meta.certs.diego.ca ))
              rep:
                .: (( inject meta.certs.diego.rep.client ))
                ca_cert: (( grab meta.certs.diego.ca ))

      - name: tps
        release: capi
        properties:
          capi:
            tps:
              bbs:
                .: (( inject meta.certs.diego.bbs.client ))
                ca_cert: (( grab meta.certs.diego.ca ))
              cc:
                .: (( inject meta.certs.diego.tps.client ))
                ca_cert: (( grab meta.certs.diego.ca ))
              watcher:
                skip_consul_lock: true
                locket:
                  api_location: "locket.service.cf.internal:8891"

      - name: cc_uploader
        release: capi
        properties:
          capi:
            cc_uploader:
              cc:
                .: (( inject meta.certs.diego.cc_uploader.client ))
                ca_cert: (( grab meta.certs.diego.ca ))

              mutual_tls:
                .: (( inject meta.certs.diego.cc_uploader.server ))
                ca_cert: (( grab meta.certs.diego.ca ))

      - name: route_emitter
        release: diego
        properties:
          locks:
            consul:
              enabled: false
          diego:
            route_emitter:
              healthcheck_address: 127.0.0.1:17012 # to avoid conflict colocating with stager
              bbs:
                .: (( inject meta.certs.diego.bbs.client ))
                ca_cert: (( grab meta.certs.diego.ca ))
              uaa:
                ca_cert: (( grab meta.certs.uaa.ca ))
                client_secret: (( grab meta.uaa.tcp_emitter_secret ))

      - name: scheduler
        release: cf-syslog-drain
        properties:
          scalablesyslog:
            scheduler:
              api:
                url: https://cloud-controller-ng.service.cf.internal:9023
              tls:
                client:
                  adapter_cn: "ss-adapter"
                  ca:   (( grab meta.certs.loggregator.ca ))
                  cert: (( grab meta.certs.loggregator.syslogger.client.cert ))
                  key:  (( grab meta.certs.loggregator.syslogger.client.key ))

                api:
                  cn: "cloud-controller-ng.service.cf.internal"
                  ca:   (( grab meta.certs.diego.ca ))
                  cert: (( grab meta.certs.loggregator.syslogger.api.cert ))
                  key:  (( grab meta.certs.loggregator.syslogger.api.key ))
